rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to get order data from Firestore
    function getOrder(orderId) {
      return get(/databases/$(database)/documents/orders/$(orderId));
    }
    
    // Helper function to check if a user is an admin
    function isAdmin(userId) {
       return exists(/databases/$(database)/documents/users/$(userId)) &&
              get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Allow seekers to upload their own payment proofs
    match /payment_proofs/{orderId}/{userId}/{fileName} {
      // User must be authenticated and their ID must match the one in the path.
      // They must also be the seeker for the specified order.
      allow write: if request.auth != null && 
                      request.auth.uid == userId &&
                      getOrder(orderId).data.seekerId == request.auth.uid;
      
      // Allow participants of the order (seeker, provider) or an admin to read the proof.
      allow read: if request.auth != null &&
                   (request.auth.uid == getOrder(orderId).data.seekerId ||
                    request.auth.uid == getOrder(orderId).data.providerId ||
                    isAdmin(request.auth.uid));
    }
    
    // Portfolio images and videos for providers
    match /serviceAds/{providerId}/{mediaType}/{fileName} {
        // Allow write only if the providerId matches the authenticated user's ID
        allow write: if request.auth != null && request.auth.uid == providerId;
        // Allow anyone to read portfolio images/videos
        allow read: if true;
    }
    
    // Chat media
    match /chats/{chatId}/{fileName} {
      // Allow write if the user is a participant of the chat
      allow write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds;
      // Allow read if the user is a participant of the chat
      allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds;
    }

  }
}
