
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    // - Anyone can create a user profile (register).
    // - Only the owner can update their own profile.
    // - Authenticated users can read public profiles (e.g., provider profiles).
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update, delete: if isOwner(userId);
    }

    // Ratings Collection
    // - Only authenticated users can create a rating.
    // - A user cannot rate themselves.
    // - Anyone can read ratings.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.raterUserId == request.auth.uid && request.resource.data.ratedUserId != request.auth.uid;
      allow update, delete: if false; // Ratings are generally immutable
    }

    // Chats Collection
    // - A chat document can only be read by participants.
    // - A chat can only be created if the requester is a participant and the participant list is correct.
    match /chats/{chatId} {
      allow read: if isAuthenticated() && request.auth.uid in resource.data.participants;
      allow create: if isAuthenticated() && request.auth.uid in request.resource.data.participants && request.resource.data.participants.size() == 2;
      allow update: if isAuthenticated() && request.auth.uid in resource.data.participants; // For updating lastMessage etc.
      
      // Messages Subcollection
      // - A message can only be read/written by a participant of the parent chat.
      // - A message can only be created by the sender themselves.
      // - The message type must be either 'text' or 'audio'.
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if request.resource.data.senderId == request.auth.uid
                       && (request.resource.data.type == 'text' || request.resource.data.type == 'audio');
      }
    }
  }
}
