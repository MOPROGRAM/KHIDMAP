
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can only read/update their own profile. Anyone can create a user profile (for signup).
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      // Anyone can read a provider's profile for the search functionality
      allow get: if get(/databases/$(database)/documents/users/$(userId)).data.role == 'provider';
    }

    // Ratings can be created by any authenticated user.
    // Users can only read ratings, but not modify or delete them.
    match /ratings/{ratingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if false; 
    }

    // Conversations can only be accessed by participants.
    match /conversations/{conversationId} {
      allow read, update, delete: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;

      // Messages within a conversation can only be accessed by the conversation's participants.
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[?request.auth.uid] == true;
        allow update, delete: if false; 
      }
    }
  }
}
