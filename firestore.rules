
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public can read profiles, but only the user can write to their own profile.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings: Public can read, but only authenticated users can create.
    // Update/delete is restricted to the original rater.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.raterUserId;
    }
    
    // Chat Documents
    match /messages/{chatId} {
      // Allow reading or updating a chat document (e.g. last message) IF the user is a participant.
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      
      // Allow creating a new chat IF the requesting user is included in the new document's participant list.
      // This is the key fix for starting new conversations.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participantIds;
      
      // Prevent chats from being deleted.
      allow delete: if false;

      // Individual Messages Subcollection
      match /messages/{messageId} {
        // Allow reading a message IF the user is a participant in the parent chat document.
        // The get() method is a secure way to check the parent document's data.
        allow read: if request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds[request.auth.uid] == true;
                         
        // Allow creating a message IF the user is the sender AND a participant of the parent chat.
        allow create: if request.auth != null &&
                         request.auth.uid == request.resource.data.senderId &&
                         get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds[request.auth.uid] == true;
                         
        // Allow updating a message ONLY to mark it as read. No other field can be changed.
        allow update: if request.auth != null &&
                         get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds[request.auth.uid] == true &&
                         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy']);

        // Prevent individual messages from being deleted to maintain chat integrity.
        allow delete: if false;
      }
    }
  }
}

    