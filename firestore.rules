rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- USERS ---
    // Anyone can read a user's public profile.
    // Only the user themselves can create or update their profile.
    match /users/{userId} {
      allow read;
      allow create, update: if request.auth != null && request.auth.uid == userId;
      // Deletion should be handled by a backend function for safety.
      allow delete: if false; 
    }

    // --- USERNAMES ---
    // Used to ensure usernames are unique.
    // Anyone can read to check for existence.
    // Only the user creating their profile can claim a username.
    match /usernames/{username} {
      allow read;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }

    // --- ORDERS ---
    // Seeker, Provider, and Admin can access the order details.
    match /orders/{orderId} {
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.seekerId || request.auth.uid == resource.data.providerId || request.auth.token.email == "mobusinessarena@gmail.com");
      // Only an authenticated seeker can create an order.
      allow create: if request.auth != null;
    }

    // --- RATINGS ---
    // Anyone can read ratings.
    // Only authenticated users can create ratings.
    match /ratings/{ratingId} {
      allow read;
      allow create: if request.auth != null;
      // Prevent editing/deleting ratings to maintain integrity.
      allow update, delete: if false;
    }

    // --- MESSAGES & CHATS ---
    // Only participants can read/write to a chat.
    match /messages/{chatId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      // Chat creation is handled by the `startOrGetChat` function logic.
      allow create: if request.auth != null;
      
      // Sub-collection for actual messages
      match /messages/{messageId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds.hasAny([request.auth.uid]);
        // Prevent editing/deleting messages to keep chat history immutable.
        allow update, delete: if false;
      }
    }
    
    // --- CALLS ---
    match /calls/{callId} {
        // Participants can access call documents for signaling.
        allow read, update, create: if request.auth != null && request.auth.uid in resource.data.participantIds;

        match /callerCandidates/{candidateId} {
            allow create: if request.auth != null;
        }
        match /calleeCandidates/{candidateId} {
            allow create: if request.auth != null;
        }
    }

    // --- NOTIFICATIONS (THE FIX) ---
    // A user can only read and write to their own notifications path.
    match /notifications/{notificationId} {
      allow read, create, update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
