
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public can read profiles, but only the user can write to their own profile.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings: Public can read, but only authenticated users can create.
    // Update/delete is restricted to the original rater.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.raterUserId;
    }
    
    // Messages Collection (the parent documents for each chat)
    match /messages/{chatId} {
      // Allow a user to read or write to a chat document (e.g., update last message)
      // if they are a participant.
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      // Messages Subcollection (the actual individual messages)
      match /messages/{messageId} {
        // A user can read any message in a chat they are part of.
        // This works because the app's query includes `where('participants', 'array-contains', request.auth.uid)`.
        allow read: if request.auth != null && request.auth.uid in resource.data.participants;

        // A user can create a message if:
        // 1. They are authenticated.
        // 2. Their UID matches the senderId in the new message data.
        // 3. They are listed as a participant in the new message data.
        allow create: if request.auth != null &&
                         request.auth.uid == request.resource.data.senderId &&
                         request.auth.uid in request.resource.data.participants;
                         
        // Disallow updating or deleting messages for integrity.
        allow update, delete: if false;
      }
    }
  }
}
