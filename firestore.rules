
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public read access to user profiles, but only the owner can write.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow public read access to ratings.
    // Only authenticated users can create ratings.
    // Users cannot edit or delete ratings.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if false;
    }

    // --- CHAT RULES ---
    // A chat document can only be read or updated by its participants.
    match /chats/{chatId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;
      
      // A chat can only be created if the requesting user is one of the participants.
      // And the participants array must contain exactly 2 users.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants && request.resource.data.participants.size() == 2;
      
      // Messages Subcollection Rules
      // A message can only be read by participants of the parent chat.
      match /messages/{messageId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        
        // A message can only be created by a participant of the parent chat.
        // The senderId of the new message must be the UID of the authenticated user.
        allow create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]) && request.resource.data.senderId == request.auth.uid;
        
        // Nobody can update or delete messages to maintain chat integrity.
        allow update, delete: if false;
      }
    }
  }
}
