
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Allow anyone to create their own user document (registration).
    // - Allow users to read/update their own profile.
    // - Allow public read access for fields needed for provider profiles.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings Collection
    // - Allow authenticated users to create ratings.
    // - Prevent users from editing/deleting ratings to maintain integrity.
    // - Allow anyone to read ratings.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.raterUserId;
      allow update, delete: if false;
    }

    // Chats Collection
    // - A user can only create a chat if they are a participant.
    // - Only participants can read or update a chat document (e.g., last message).
    match /chats/{chatId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      
      // Messages Subcollection
      // - Only participants of the chat can read/write messages.
      // - The senderId of a new message must be the UID of the user sending it.
      match /messages/{messageId} {
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if request.auth != null 
                      && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants
                      && request.resource.data.senderId == request.auth.uid
                      && (request.resource.data.type == 'text' || request.resource.data.type == 'audio');
        allow update, delete: if false;
      }
    }
  }
}
