
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public can read profiles, but only the user can write to their own profile.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings: Public can read, but only authenticated users can create.
    // Update/delete is restricted to the original rater.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.raterUserId;
    }
    
    // Messages Collection
    match /messages/{chatId} {
      // HELPER FUNCTION: Check if the user is a participant in a chat based on existing data.
      function isParticipant() {
        return request.auth != null && resource.data.participantIds[request.auth.uid] == true;
      }
      
      // HELPER FUNCTION: Check if the user is a participant based on incoming data for a create operation.
      function isParticipantInNewData() {
        return request.auth != null && request.resource.data.participantIds[request.auth.uid] == true;
      }
      
      // A user can read or update a chat document (e.g. lastMessage) if they are a participant.
      allow read, update: if isParticipant();
      
      // A user can create a chat document if:
      // 1. They are authenticated.
      // 2. They are one of the participants in the new document data.
      // 3. The chat is being created with exactly two participants.
      allow create: if isParticipantInNewData() && request.resource.data.participantIds.size() == 2;
      
      // Do not allow deleting entire chat threads from the client.
      allow delete: if false;

      // Messages Subcollection
      match /messages/{messageId} {
        // HELPER FUNCTION: Securely check the parent chat document to see if user is a participant.
        function isParticipantInParentChat() {
          return request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds[request.auth.uid] == true;
        }

        // A user can read any message in a chat they are a part of.
        allow read: if isParticipantInParentChat();

        // A user can create a new message if:
        // 1. They are a participant in the parent chat.
        // 2. Their UID matches the senderId of the new message.
        allow create: if isParticipantInParentChat() && request.auth.uid == request.resource.data.senderId;
                         
        // Disallow updating or deleting messages for integrity.
        allow update, delete: if false;
      }
    }
  }
}
