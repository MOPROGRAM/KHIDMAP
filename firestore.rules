
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
    }

    match /chats/{chatId} {
      // Helper function to check if the requesting user is a participant in the chat.
      // It uses the parent document's data.
      function isParticipant() {
        return request.auth != null && request.auth.uid in resource.data.participants;
      }

      // Allow a user to CREATE a chat if:
      // 1. They are authenticated.
      // 2. Their UID is in the "participants" array of the new document being created.
      // 3. The participants array has exactly two members.
      allow create: if request.auth != null
                    && request.auth.uid in request.resource.data.participants
                    && request.resource.data.participants.size() == 2;

      // Allow a user to READ, UPDATE, or DELETE a chat document if they are a participant.
      allow read, update, delete: if isParticipant();

      match /messages/{messageId} {
        // Helper function to check participation by getting the parent chat document.
        function isParentChatParticipant() {
          return get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
        }

        // Allow reading messages only if the user is a participant of the parent chat.
        allow read: if request.auth != null && isParentChatParticipant();

        // Allow creating a message only if the user is a participant AND the senderId is their own.
        allow create: if request.auth != null
                      && isParentChatParticipant()
                      && request.resource.data.senderId == request.auth.uid;
        
        // Do not allow updating or deleting individual messages.
        allow update, delete: if false;
      }
    }
  }
}
