rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public can read profiles, but only the user can write to their own profile.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings: Public can read, but only authenticated users can create.
    // Update/delete is restricted to the original rater.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.raterUserId;
    }
    
    // Chat documents in the 'messages' collection
    match /messages/{chatId} {
      // Allow a user to read (get, list) or update an existing chat document 
      // if they are a participant.
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;

      // Allow a user to CREATE a chat document if their UID is in the 'participants' list
      // of the document being created. This is the key fix.
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;
      
      // Disallow deleting entire chat conversations.
      allow delete: if false;

      // Individual messages within the subcollection
      match /messages/{messageId} {
        // Function to securely check if the requesting user is a member of the parent chat.
        function isParticipant() {
          return request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.participants.hasAny([request.auth.uid]);
        }

        // Allow reading messages if the user is a participant of the parent chat.
        allow read: if isParticipant();

        // Allow creating a message if the user is a participant and is the sender.
        allow create: if isParticipant() && request.auth.uid == request.resource.data.senderId;
        
        // Disallow updating or deleting individual messages to maintain chat history integrity.
        allow update, delete: if false;
      }
    }
  }
}
