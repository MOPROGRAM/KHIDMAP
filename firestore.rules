
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Allow reads, but only authenticated owners can write.
    match /users/{userId} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings: Anyone can read, but only authenticated users can create.
    match /ratings/{ratingId} {
      allow read;
      allow create: if request.auth != null;
    }

    // Chats: Only participants can access their chats and messages.
    match /chats/{chatId} {
      // Helper function to check if the user is a participant.
      function isParticipant() {
        return request.auth.uid in resource.data.participants;
      }

      // Allow participants to read and update chat metadata (e.g., lastMessage).
      allow read, update: if isParticipant();
      
      // Allow a user to create a new chat if they are one of the participants.
      allow create: if request.auth.uid in request.resource.data.participants;

      // Messages Subcollection:
      match /messages/{messageId} {
        // Allow participants of the parent chat to read and create messages.
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
  }
}
