rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public can read, only owner can write/delete.
    match /users/{userId} {
      allow read: if true;
      allow write, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Usernames: Used to ensure username uniqueness.
    // Only the user can create their own username doc.
    match /usernames/{username} {
       allow read: if true;
       allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
       allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
    }

    // Orders: Seeker/Provider can read/update, Admin can read/update.
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.seekerId || request.auth.uid == resource.data.providerId || request.auth.token.email == 'mobusinessarena@gmail.com');
    }

    // Ratings: Anyone can read, only authenticated users can create.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.raterUserId;
    }

    // Calls: Only participants can access.
    match /calls/{callId} {
        allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;

        // ICE candidates subcollections
        match /{subcollection}/{candidateId} {
            allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/calls/$(callId)).data.participantIds;
        }
    }

    // Chats & Messages: Only participants can read/write.
    match /messages/{chatId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;

      match /messages/{messageId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/messages/$(chatId)).data.participantIds[request.auth.uid] == true;
      }
    }
  }
}
