
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public can read profiles, but only the user can write to their own profile.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Ratings: Public can read, but only authenticated users can create.
    // Update/delete is restricted to the original rater.
    match /ratings/{ratingId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.raterUserId;
    }
    
    // --- Messaging System ---
    // Rule for the parent chat documents
    match /messages/{chatId} {
      // A user can read/write a chat document if they are a participant.
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participants;

      // Rule for the subcollection of messages within a chat
      match /messages/{messageId} {
        // A user can read messages if they are a participant in the parent chat document.
        // This 'get()' call is allowed in subcollection queries because the path to the parent is fully known.
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/messages/$(chatId)).data.participants;
        
        // A user can create a message if they are a participant in the chat
        // and they are the sender of the message.
        allow create: if request.auth != null && 
                         request.auth.uid == request.resource.data.senderId &&
                         (request.auth.uid in get(/databases/$(database)/documents/messages/$(chatId)).data.participants);

        // Nobody can update or delete messages to maintain chat integrity.
        allow update, delete: if false;
      }
    }
  }
}
